// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.api.DbInfrastructure;

#nullable disable

namespace backend.api.Migrations
{
    [DbContext(typeof(PlemionaDbContext))]
    [Migration("20250531120831_AddedTownModels")]
    partial class AddedTownModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.core.Models.Building", b =>
                {
                    b.Property<long>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BuildingId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BuildingId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("backend.core.Models.BuildingInstance", b =>
                {
                    b.Property<long>("BuildingInstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BuildingInstanceId"));

                    b.Property<long>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<long?>("TownId")
                        .HasColumnType("bigint");

                    b.HasKey("BuildingInstanceId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("TownId");

                    b.ToTable("BuildingInstance");
                });

            modelBuilder.Entity("backend.core.Models.Player", b =>
                {
                    b.Property<long>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlayerId"));

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<int>("Iron")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Stone")
                        .HasColumnType("integer");

                    b.Property<int>("Wood")
                        .HasColumnType("integer");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("backend.core.Models.Town", b =>
                {
                    b.Property<long>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TownId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Population")
                        .HasColumnType("integer");

                    b.Property<int>("X_coordinate")
                        .HasColumnType("integer");

                    b.Property<int>("Y_coordinate")
                        .HasColumnType("integer");

                    b.HasKey("TownId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("backend.core.Models.BuildingInstance", b =>
                {
                    b.HasOne("backend.core.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.core.Models.Town", null)
                        .WithMany("BuildingInstances")
                        .HasForeignKey("TownId");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("backend.core.Models.Town", b =>
                {
                    b.HasOne("backend.core.Models.Player", "Player")
                        .WithMany("Towns")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("backend.core.Models.Player", b =>
                {
                    b.Navigation("Towns");
                });

            modelBuilder.Entity("backend.core.Models.Town", b =>
                {
                    b.Navigation("BuildingInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
